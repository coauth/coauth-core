# Configuration for Application
%dev.quarkus.http.port=8083

# Configuration for Database
quarkus.datasource.devservices.enabled=true
quarkus.datasource.db-kind=postgresql
quarkus.datasource.devservices.db-name=coauth
quarkus.datasource.devservices.port=5083
#%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.datasource.devservices.username=${POSTGRESQL_USER}
%dev.quarkus.datasource.devservices.password=${POSTGRESQL_PASSWORD}
%dev.quarkus.hibernate-orm.sql-load-script=init.sql
quarkus.datasource.reactive.max-size=30
quarkus.datasource.reactive.shared=true
quarkus.datasource.reactive.name=coauth
#####################
#%prod.quarkus.hibernate-orm.database.generation=update
#%prod.quarkus.hibernate-orm.sql-load-script=init.sql
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.reactive.url=vertx-reactive:postgresql://postgresql/coauth
%prod.quarkus.datasource.username=${POSTGRESQL_USER}
%prod.quarkus.datasource.password=${POSTGRESQL_PASSWORD}
%prod.quarkus.datasource.reactive.max-size=30

# Configuration for Infinispan
# Infinispan configuration
quarkus.infinispan-client.devservices.enabled=true
%dev.quarkus.infinispan-client.username=${INFINISPAN_USER}
%dev.quarkus.infinispan-client.password=${INFINISPAN_PASSWORD}
%dev.quarkus.infinispan-client.devservices.port=11222
quarkus.infinispan-client.devservices.shared=true
######################
%prod.quarkus.infinispan-client.hosts=infinispan-db:11222
%prod.quarkus.infinispan-client.username=${INFINISPAN_USER}
%prod.quarkus.infinispan-client.password=${INFINISPAN_PASSWORD}
%prod.quarkus.infinispan-client.cache.totp_register.configuration=<distributed-cache><encoding media-type="application/x-protostream"/></distributed-cache>
%prod.quarkus.infinispan-client.cache.totp_verify.configuration=<distributed-cache><encoding media-type="application/x-protostream"/></distributed-cache>

# Configuration for Dev mode Kafka
#quarkus.kafka.devservices.shared=true
#quarkus.kafka.devservices.enabled=true

# Configuration for Kafka Topics
#mp.messaging.outgoing.totp-verify-status.connector=smallrye-kafka
#mp.messaging.outgoing.totp-verify-status.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
#mp.messaging.incoming.totp-verify-generate.connector=smallrye-kafka
#mp.messaging.incoming.totp-verify-generate.value.deserializer=dev.coauth.module.messaging.MessageVerificationGenerateDtoDeserializer
#mp.messaging.outgoing.totp-register-status.connector=smallrye-kafka
#mp.messaging.outgoing.totp-register-status.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
#mp.messaging.incoming.totp-register-generate.connector=smallrye-kafka
#mp.messaging.incoming.totp-register-generate.value.deserializer=dev.coauth.module.messaging.MessageRegisterGenerateDtoDeserializer

#kafka.lazy-client=false

# Updates for Ready Managed Kafka (Example: Upstash)
#%prod.kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
#%prod.mp.messaging.connector.smallrye-kafka.security.protocol=${KAFKA_SECURITY_PROTOCOL}
#%prod.mp.messaging.connector.smallrye-kafka.sasl.mechanism=${KAFKA_SASL_MECHANISM}
#%prod.kafka.sasl.jaas.config=${KAFKA_JAAS_CONFIG}


# TOTP Module configuration
%dev.totp.allowed-discrepancy=2
%dev.totp.time-period=30
%dev.totp.digit-length=6
%dev.totp.attempt-expiry-time-minutes=15

%prod.totp.allowed-discrepancy=2
%prod.totp.time-period=30
%prod.totp.digit-length=6
%prod.totp.attempt-expiry-time-minutes=15

quarkus.rest-client.coauth-core-module-registry.url=${COAUTH_MODULE_REGISTRY:http://localhost:8082}
quarkus.rest-client.coauth-core-module-registry.scope=jakarta.inject.Singleton
quarkus.rest-client.coauth-core-module-registry.verify-host=false

# Configuration for Application
%dev.quarkus.http.port=8082

# Configuration for Database
quarkus.datasource.devservices.enabled=true
quarkus.datasource.db-kind=postgresql
quarkus.datasource.devservices.db-name=coauth
quarkus.datasource.devservices.port=5082
#%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.datasource.devservices.username=${POSTGRESQL_USER}
%dev.quarkus.datasource.devservices.password=${POSTGRESQL_PASSWORD}
%dev.quarkus.hibernate-orm.sql-load-script=init.sql
quarkus.datasource.reactive.max-size=30
quarkus.datasource.reactive.shared=true
quarkus.datasource.reactive.name=coauth
#####################
%prod.quarkus.hibernate-orm.database.generation=update
%prod.quarkus.hibernate-orm.sql-load-script=init.sql
%pord.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.reactive.url=vertx-reactive:postgresql://postgresql/coauth
%prod.quarkus.datasource.username=${POSTGRESQL_USER}
%prod.quarkus.datasource.password=${POSTGRESQL_PASSWORD}
%prod.quarkus.datasource.reactive.max-size=30

# Configuration for Infinispan
# Infinispan configuration
quarkus.infinispan-client.devservices.enabled=true
%dev.quarkus.infinispan-client.username=${INFINISPAN_USER}
%dev.quarkus.infinispan-client.password=${INFINISPAN_PASSWORD}
%dev.quarkus.infinispan-client.devservices.port=11222
quarkus.infinispan-client.devservices.shared=true
######################
%prod.quarkus.infinispan-client.hosts=infinispan-db:11222
%prod.quarkus.infinispan-client.username=${INFINISPAN_USER}
%prod.quarkus.infinispan-client.password=${INFINISPAN_PASSWORD}

# Configuration for Kafka
%prod.kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
mp.messaging.outgoing.totp-verify-generate.connector=smallrye-kafka
#mp.messaging.incoming.totp-verify-generate.topic=totp-verify-generate
mp.messaging.outgoing.totp-verify-generate.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.incoming.totp-verify-status.connector=smallrye-kafka
#mp.messaging.outgoing.totp-verify-status.topic=totp-verify-status
mp.messaging.incoming.totp-verify-status.value.deserializer=dev.coauth.core.module.messaging.MessageVerificationStatusDtoDeserializer

mp.messaging.outgoing.totp-register-generate.connector=smallrye-kafka
#mp.messaging.incoming.totp-register-generate.topic=totp-register-generate
mp.messaging.outgoing.totp-register-generate.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.incoming.totp-register-status.connector=smallrye-kafka
#mp.messaging.outgoing.totp-register-status.topic=totp-register-status
mp.messaging.incoming.totp-register-status.value.deserializer=dev.coauth.core.module.messaging.MessageRegisterStatusDtoDeserializer


#quarkus.reactive-messaging.kafka.serializer-generation.enabled=true

#mp.messaging.outgoing.reconfirm-verify-generate.connector=smallrye-kafka
#mp.messaging.incoming.reconfirm-verify-status.connector=smallrye-kafka

#mp.messaging.outgoing.totp-verify-generate-out.topic=totp-verify-generate
quarkus.kafka.devservices.shared=true
quarkus.kafka.devservices.enabled=true

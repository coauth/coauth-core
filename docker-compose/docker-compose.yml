# Docker compose file for Image API Microservices Using Quarkus

# Notes
# Tweak resources cpu/memory as per machine contraints
# Especially ELK Stack
# Confirm environment variable are valid and the images are availale

version: "3.8"
services:
  elasticsearch:
    image: elasticsearch:7.9.2
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "1.5G"
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
  logstash:
    image: logstash:7.9.2
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    environment:
      - config.string= '
        input {
        gelf {
        port => 12201
        }
        }
        output {
        stdout {}
        elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        }
        }'
    ports:
      - "12201:12201/udp"
      - "5000:5000"
      - "9600:9600"
  kibana:
    image: kibana:7.9.2
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    ports:
      - "5601:5601"
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger UI
      - "14268:14268" # Receive legacy OpenTracing traces, optional
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver, not yet used by Quarkus, optional
      - "14250:14250" # Receive from external otel-collector, optional
    environment:
      - COLLECTOR_OTLP_ENABLED=true